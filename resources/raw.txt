def h(int n) -> int /% _O(n) %/  {
    while (n>0) /% _O(n) %/  {
        n = (n - 1);
    }
}


def z(int n) -> void /% O((n)^(2.000000)) %/  {
}


def f(int n) -> void /% _O(n) %/  {
    if (n<=0) {
        return z[n];
    } else {
        int res = h[n];
        res = (res + f[(n / 2)]);
        return res;
    }
}


def g(int a, int b) -> void /% O((a)^(3.000000)) %/  {
    return 1;
}


